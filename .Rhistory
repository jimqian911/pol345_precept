x = -5 #x is now negative
if (x > 0){
print("Positive number")
}
#Calculate the absolute value of a number
x = -3
if (x >=0){
cat("The absolute value of x is", x)
} else{
cat("The absolute value of x is", -x)
}
x = 0
if (x > 0){
cat("x is positive")
} else if (x < 0){
cat("x is negative")
} else {
cat("x is zero")
}
#Calculate the absolute value for a vector of numbers
x = c(2, 0, -1, 5, -3, -6)
#Calculate the absolute value for a vector of numbers
x = c(2, 0, -1, 5, -3, -6)
x.abs = c() #the container to store absolute values of each element in x
for (i in 1:length(x)){
if (x >=0) {
x.abs[i] = x
} else {
x.abs[i] = -x
}
}
print(x.abs)
#Calculate the absolute value for a vector of numbers
x = c(2, 0, -1, 5, -3, -6)
x.abs = c() #the container to store absolute values of each element in x
for (i in 1:length(x)){
if (x[i] >=0) {
x.abs[i] = x
} else {
x.abs[i] = -x
}
}
print(x.abs)
#Calculate the absolute value for a vector of numbers
x = c(2, 0, -1, 5, -3, -6)
x.abs = c() #the container to store absolute values of each element in x
for (i in 1:length(x)){
if (x[i] >=0) {
x.abs[i] = x[i]
} else {
x.abs[i] = -x[i]
}
}
print(x.abs)
resource = read.csv("data/resource.csv")
resource = read.csv("data/resources.csv")
head(resourcec)
head(resource)
res_NoNA = na.omit(resourece[, 4:8])
res_NoNA = na.omit(resource[, 4:8])
res_NoNA_standardized = scale(res_NoNA)
res_NoNA = na.omit(resource[, c(3,4,5,8)])
res_NoNA_standardized = scale(res_NoNA)
head(res_NoNA_standardized)
res_NoNA = na.omit(resource[, c(3,4,5,7)])
res_NoNA_standardized = scale(res_NoNA)
km.3 = kmeans(res_NoNA_standardized,
center = 3)
class(km.3)
typeof(km.3)
names(km.3)
lapply(km.3, typeof)
km.3.cluster = km.3$cluster
km.3.centers = km.3$centers
?kmeans
table(km.3.cluster)
set.seed(08540)
km.3 = kmeans(res_NoNA_standardized,
center = 3)
```{r}
km.3 = kmeans(res_NoNA_standardized,
center = 3)
names(km.3)
km.3.cluster = km.3$cluster
km.3.centers = km.3$centers
table(km.3.cluster)
plot(x = res_NoNA$logGDPcp,
y = res_NoNA$illit,
xlab = "GDP Per Capital (logged)",
ylab = "Illiteracy Rate",
col = km.3.cluster)
km.3.centers
